<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="actPasteUrl.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAYBJREFUOE+1k6F2
        AjEURPcT+AQ+YWVlJDISGYmMrIxERq6MREYiI1dGIiORkXXTeUm3LJS2oqc5Z04QzJ33JjAM/3FSdBDF
        4GCNHn/MiCdvKSwK3qBeQ1O5eNiDgj9ayn3cVt0BxVhrBKhaA8Jk220POufZwVkNZ0bURPB5KxPhC0DM
        In80yDOBV890hzIbxEnD7BWC2yL7AXb/CAi+mcFU7wwTRVom6GKiJcDbDjA7dT9BWACyd2F6tshhc9PE
        zzQuUi/jA2ByvbTC+8L9s+ZAG/jAlaYI56kjO3EB5tXDWP8EIMkXljTTnFiYAGj+PG/csFaUa4U+OGjj
        bpDgJZmaVTefNyhhaMlyQkxdp4RcCKA5zRlKmw6R95W9F3M9DR3AsbFKzpeKlAv03jaz2mkoxULlR1Jn
        iskyeiEgT3wu7ixjryeQXmLKvR9KjVsCnJj7E60lhcnOS3KaSzPHc9caoOT95b2NVtBqbGRpW3Ze0p7d
        bYLvjrQtX/hNf/4zvwMw5PaIQyGuPQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="imglDirection.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAc
        BAAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABDAEAARABAAT/ARkBEAj/AUIBTQE2BwABNgMAASgDAAEw
        AwABEAMAAQEBAAEYBgABCf8AzwABjQGxAZkBYAF2AWcBNAFBATUYAAGVAbwBogGQAbQBnAGJAaoBkwGC
        AaEBjAF8AZgBhF0AAY0BsAGZAXsBlwGEAVYBkgFkARsBIgEcATUBQgE2FQABkAG0AZwBtAHxAckBsQHv
        AcYBqQHpAb4BIgErASNaAAGNAbABmQF7AZcBhAFtAbIBgAFiAaoBdAFDAXcBTgEbASIBHAE1AUIBNhIA
        AYkBqgGTAa4B7gHEAZMB4gGtAXMBswGGASsBNgEsVwABjQGwAZkBewGXAYQBgAHHAZYBdgHBAYwBbAG1
        AYABYgGqAXQBQwF3AU4BGwEiARwBJAEtASUPAAGCAaEBjAGqAeoBvwGLAdgBowFqAaoBfQEzAUABNVQA
        AZgBwAGmAXsBlwGEAaUB4QG4AagB5QG7AaMB4AG2AXYBwQGMAVoBlwFqAVEBjQFgAUMBdwFOARsBIgEc
        ASsBNgEsAwABkAG0AZwBiQGqAZMBggGhAYwBfAGYAYQBpAHkAbkBgQHNAZgBYgGgAXQBOgFJATwBeAGS
        AX8BeAGSAX8BeAGSAX9LAAGQAbQBnAGJAaoBkwGCAaEBjAF8AZgBhAGkAeQBuQGBAc0BmAFiAaABdAE6
        AUkBPAF4AZIBfwF4AZIBfwF4AZIBfwMAAZgBwAGmAXsBlwGEAaUB4QG4AagB5QG7AaMB4AG2AXYBwQGM
        AVoBlwFqAVEBjQFgAUMBdwFOARsBIgEcASsBNgEsVAABggGhAYwBqgHqAb8BiwHYAaMBagGqAX0BMwFA
        ATUPAAGNAbABmQF7AZcBhAGAAccBlgF2AcEBjAFsAbUBgAFiAaoBdAFDAXcBTgEbASIBHAEkAS0BJVcA
        AYkBqgGTAa4B7gHEAZMB4gGtAXMBswGGASsBNgEsEgABjQGwAZkBewGXAYQBbQGyAYABYgGqAXQBQwF3
        AU4BGwEiARwBNQFCATZaAAGQAbQBnAG0AfEByQGxAe8BxgGpAekBvgEiASsBIxUAAY0BsAGZAXsBlwGE
        AVYBkgFkARsBIgEcATUBQgE2XQABlQG8AaIBkAG0AZwBiQGqAZMBggGhAYwBfAGYAYQYAAGNAbEBmQFg
        AXYBZwE0AUEBNf8A/wAJAAFCAU0BPgcAAT4DAAEoAwABMAMAARADAAEBAQABAQUAAYAXAAP/AQAD/wUA
        A/8FAAP/BQAB8QH+AQ8FAAHgAf4BDwUAAcABfgEPBQABgAE+AQ8GAAEQAQEGAAEQAQEFAAHgAfgBAwUA
        AeAB/AEHBQAB4AH+AQ8FAAHgAf8BHwUAA/8FAAP/BQAD/xsACw==
</value>
  </data>
</root>